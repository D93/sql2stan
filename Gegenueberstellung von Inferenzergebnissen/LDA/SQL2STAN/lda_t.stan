data {
int Total__ofTable__document__asNumberOfDistinct__document_id;
int Total__ofTable__word__asNumberOfDistinct__word_id;
int Total__ofTable__token__asNumberOfDistinct__token_id;
int Total__ofTable__topic__asNumberOfDistinct__topic_id;
int Total__ofTable__document_token_word__asNumberOfDistinct__token_id;
int Total__ofTable__document_token_topic__asNumberOfDistinct__token_id;
int Total__ofTable__document_topic__asNumberOfDistinct__document_id;
int Total__ofTable__document_topic__asNumberOfDistinct__topic_id;
int Total__ofTable__topic_word__asNumberOfDistinct__topic_id;
int Total__ofTable__topic_word__asNumberOfDistinct__word_id;
int document_id__asColumnOfTable__document[Total__ofTable__document__asNumberOfDistinct__document_id];
int word_id__asColumnOfTable__word[Total__ofTable__word__asNumberOfDistinct__word_id];
int token_id__asColumnOfTable__token[Total__ofTable__token__asNumberOfDistinct__token_id];
int topic_id__asColumnOfTable__topic[Total__ofTable__topic__asNumberOfDistinct__topic_id];
int word_id__asColumnOfTable__document_token_word[Total__ofTable__document_token_word__asNumberOfDistinct__token_id];
int token_id__asColumnOfTable__document_token_word[Total__ofTable__document_token_word__asNumberOfDistinct__token_id];
int document_id__asColumnOfTable__document_token_word[Total__ofTable__document_token_word__asNumberOfDistinct__token_id];
int token_id__asColumnOfTable__document_token_topic[Total__ofTable__document_token_topic__asNumberOfDistinct__token_id];
int document_id__asColumnOfTable__document_token_topic[Total__ofTable__document_token_topic__asNumberOfDistinct__token_id];
int topic_id__asColumnOfTable__document_topic[Total__ofTable__document_topic__asNumberOfDistinct__document_id,Total__ofTable__document_topic__asNumberOfDistinct__topic_id];
int document_id__asColumnOfTable__document_topic[Total__ofTable__document_topic__asNumberOfDistinct__document_id,Total__ofTable__document_topic__asNumberOfDistinct__topic_id];
int topic_id__asColumnOfTable__topic_word[Total__ofTable__topic_word__asNumberOfDistinct__topic_id,Total__ofTable__topic_word__asNumberOfDistinct__word_id];
int word_id__asColumnOfTable__topic_word[Total__ofTable__topic_word__asNumberOfDistinct__topic_id,Total__ofTable__topic_word__asNumberOfDistinct__word_id];
vector[Total__ofTable__topic__asNumberOfDistinct__topic_id] alpha__asColumnOfTable__topic;
vector[Total__ofTable__topic_word__asNumberOfDistinct__word_id] beta__asColumnOfTable__topic_word[Total__ofTable__topic_word__asNumberOfDistinct__topic_id];
}
parameters {
simplex[Total__ofTable__document_topic__asNumberOfDistinct__topic_id] theta__asColumnOfTable__document_topic[Total__ofTable__document_topic__asNumberOfDistinct__document_id];
simplex[Total__ofTable__topic_word__asNumberOfDistinct__word_id] mu__asColumnOfTable__topic_word[Total__ofTable__topic_word__asNumberOfDistinct__topic_id];
}
model {
real gamma__for__topic_id__asColumnOfTable__topic[Total__ofTable__document_token_topic__asNumberOfDistinct__token_id,Total__ofTable__topic__asNumberOfDistinct__topic_id];
for (a in 1:Total__ofTable__document__asNumberOfDistinct__document_id) {
target += dirichlet_lpdf(theta__asColumnOfTable__document_topic[a]|alpha__asColumnOfTable__topic);
}
for (a in 1:Total__ofTable__topic__asNumberOfDistinct__topic_id) {
target += dirichlet_lpdf(mu__asColumnOfTable__topic_word[a]|beta__asColumnOfTable__topic_word[a]);
}
for (a in 1:Total__ofTable__token__asNumberOfDistinct__token_id) {
for (b in 1:Total__ofTable__topic__asNumberOfDistinct__topic_id) {
gamma__for__topic_id__asColumnOfTable__topic[a,b] = categorical_lpmf(b|theta__asColumnOfTable__document_topic[document_id__asColumnOfTable__document_token_word[a]]);
}
}

for (a in 1:Total__ofTable__token__asNumberOfDistinct__token_id) {
for (b in 1:Total__ofTable__topic__asNumberOfDistinct__topic_id) {
gamma__for__topic_id__asColumnOfTable__topic[a,b] = gamma__for__topic_id__asColumnOfTable__topic[a,b] + categorical_lpmf(word_id__asColumnOfTable__document_token_word[a]|mu__asColumnOfTable__topic_word[b]);
}
}



for (a in 1:Total__ofTable__document_token_topic__asNumberOfDistinct__token_id) {
target += log_sum_exp(gamma__for__topic_id__asColumnOfTable__topic[a]);
}
}
